{
    //子文件列表，表示可以加载的子aop文件
    "files":[],  
    //切点，可以配置多个
    "pointcuts":[{
        //切点id，必填，不可重复
        "id":"pointcut1",
        //表达式，必填，符合该表达式的方法会被拦截，可以采用通配符
        //如下，第一个表示拦截实例名为userService的getInfo方法
        //第二个表示拦截实例名以service开头的所有实例的所有方法（实例必须加入实例工厂，即用注解或在instance中配置）
        "expressions":["userService.getInfo","service*.*"]   
    }],
    //切面，可以多个
    "aspects":[
        {
            //切面对应的实例名，必填
            "instance":"logAdvice",
            //通知，必填
            //所有通知对应的方法，传入参数为被拦截方法的相关信息，格式为{instanceName:实例名,methodName:方法名,params:参数数组}
            //after-return增加 returnValue:结果
            //sfter-throw增加 throwValue:异常信息
            "advices":[
                {
                    //通知对应的切点
                    "pointcut_id":"pointcut1",	
                    //通知类型，字符串，必填，取值范围:before(前置),after(后置),after-return(正常return),after-throw(抛出异常),around(环绕，即前后置)
                    "type":"before",
                    //该切面的方法名，字符串，必填
                    "method":"before"
                },{
                    "pointcut_id":"pointcut1",
                    "type":"after",
                    "method":"after"
                },{
                    "pointcut_id":"pointcut1",
                    "type":"after-return",
                    "method":"afterReturn"
                },{
                    "pointcut_id":"pointcut1",
                    "type":"after-throw",
                    "method":"throw"
                },{
                    "pointcut_id":"pointcut1",
                    "type":"around",
                    "method":"around"
                }	
            ]
        }
    ]
}